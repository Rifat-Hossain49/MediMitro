# Cursor Rules for MediMitra Project

## PowerShell Command Guidelines

### Command Chaining and Piping
- **NEVER use `&&` for command chaining in PowerShell** - this is a bash/shell syntax that doesn't work in PowerShell
- **Use `;` (semicolon) for command chaining** in PowerShell: `command1; command2`
- **Use `|` (pipe) for output piping** between commands: `command1 | command2`
- **Use `&&` only when explicitly running bash/shell commands** or when the user specifically requests it

### Correct PowerShell Examples
```powershell
# ✅ Correct - Command chaining with semicolon
Get-Process | Where-Object {$_.CPU -gt 10}; Get-Service | Where-Object {$_.Status -eq "Running"}

# ✅ Correct - Piping output between commands
Get-ChildItem | Where-Object {$_.Extension -eq ".txt"} | Select-Object Name, Length

# ✅ Correct - Multiple commands on same line
cd src; npm install; npm run build

# ❌ Incorrect - Using && in PowerShell
Get-Process && Get-Service  # This will cause errors
```

### When to Use Different Operators
- **`;` (semicolon)**: Chain commands sequentially, each runs regardless of previous command's success
- **`|` (pipe)**: Pass output from one command as input to the next
- **`&&`**: Only use when explicitly running bash/shell commands or when user requests it
- **`||`**: Only use when explicitly running bash/shell commands

### Project-Specific Commands
- **Node.js/Next.js**: Use `;` for chaining: `npm install; npm run dev`
- **Git operations**: Use `;` for chaining: `git add .; git commit -m "message"`
- **File operations**: Use `|` for filtering: `Get-ChildItem | Where-Object {$_.Name -like "*.ts"}`

### Error Prevention
- Always verify PowerShell syntax before suggesting commands
- When in doubt, suggest commands separately or use semicolon chaining
- If the user specifically asks for bash/shell syntax, clarify that it won't work in PowerShell
- Suggest PowerShell alternatives when possible

## General Development Guidelines
- Add unit testing for all new features
- Ensure code modifications don't introduce build or lint errors
- Follow the existing code structure and patterns
- Test commands in PowerShell before suggesting them to users
