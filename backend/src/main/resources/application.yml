spring:
  application:
    name: medimitra-backend
  
  # Database Configuration - Neon PostgreSQL
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://ep-muddy-math-a1e2rmtd-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require}
    username: ${DB_USERNAME:neondb_owner}
    password: ${DB_PASSWORD:npg_DfaC31PJjLNq}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JDBC Configuration
  jdbc:
    template:
      query-timeout: 30
  
  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Database Initialization - disabled to prevent conflicts
  sql:
    init:
      mode: never
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin
      roles: ADMIN

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# JWT Configuration removed - using NextAuth.js for authentication

# CORS Configuration
cors:
  allowed-origins: "http://localhost:3000,http://localhost:3001"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true
# OpenRouter AI Configuration
openrouter:
  api:
    key: ${OPENROUTER_API_KEY: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}
    url: ${OPENROUTER_API_URL:https://openrouter.ai/api/v1/chat/completions}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Appwrite Configuration for File Storage
appwrite:
  endpoint: ${APPWRITE_ENDPOINT:https://cloud.appwrite.io/v1}
  project: ${APPWRITE_PROJECT_ID:your-project-id}
  api-key: ${APPWRITE_API_KEY:your-api-key}
  bucket-id: ${APPWRITE_BUCKET_ID:medimitra-files}

# Logging Configuration
logging:
  level:
    com.medimitra: DEBUG
    org.springframework.jdbc: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Application specific properties
app:
  name: MediMitra Healthcare System
  version: 1.0.0
  description: Comprehensive Healthcare Management Platform
